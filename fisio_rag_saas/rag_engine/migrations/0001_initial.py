# Generated by Django 5.2.4 on 2025-08-04 10:10

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadata')),
                ('is_active', models.BooleanField(default=True, verbose_name='Attiva')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creata il')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aggiornata il')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Scade il')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tenant', verbose_name='Tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Utente')),
            ],
            options={
                'verbose_name': 'Sessione Chat',
                'verbose_name_plural': 'Sessioni Chat',
                'db_table': 'rag_engine_chatsession',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='Contenuto')),
                ('message_type', models.CharField(choices=[('user', 'Utente'), ('assistant', 'Assistente'), ('system', 'Sistema')], max_length=10, verbose_name='Tipo Messaggio')),
                ('sources', models.JSONField(blank=True, default=list, verbose_name='Fonti')),
                ('search_query', models.TextField(blank=True, null=True, verbose_name='Query di Ricerca')),
                ('retrieved_chunks', models.JSONField(blank=True, default=list, verbose_name='Chunks Recuperati')),
                ('processing_time_ms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tempo Elaborazione (ms)')),
                ('model_used', models.CharField(blank=True, max_length=100, null=True, verbose_name='Modello Utilizzato')),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Valutazione Utente')),
                ('is_helpful', models.BooleanField(blank=True, null=True, verbose_name='Utile')),
                ('feedback_text', models.TextField(blank=True, null=True, verbose_name='Feedback Testuale')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creato il')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='rag_engine.chatsession', verbose_name='Sessione')),
            ],
            options={
                'verbose_name': 'Messaggio Chat',
                'verbose_name_plural': 'Messaggi Chat',
                'db_table': 'rag_engine_chatmessage',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='QueryAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query_text', models.TextField(verbose_name='Testo Query')),
                ('query_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tipo Query')),
                ('query_intent', models.CharField(blank=True, max_length=100, null=True, verbose_name='Intento Query')),
                ('results_count', models.PositiveIntegerField(default=0, verbose_name='Numero Risultati')),
                ('response_time_ms', models.PositiveIntegerField(verbose_name='Tempo Risposta (ms)')),
                ('search_time_ms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tempo Ricerca (ms)')),
                ('generation_time_ms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tempo Generazione (ms)')),
                ('embedding_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='Modello Embedding')),
                ('llm_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='Modello LLM')),
                ('sources_used', models.JSONField(blank=True, default=list, verbose_name='Fonti Utilizzate')),
                ('chunks_retrieved', models.PositiveIntegerField(default=0, verbose_name='Chunks Recuperati')),
                ('relevance_score', models.FloatField(blank=True, null=True, verbose_name='Score Rilevanza')),
                ('confidence_score', models.FloatField(blank=True, null=True, verbose_name='Score Confidenza')),
                ('user_satisfaction', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Soddisfazione Utente')),
                ('was_successful', models.BooleanField(default=True, verbose_name='Successo')),
                ('error_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo Errore')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Messaggio Errore')),
                ('session_id', models.UUIDField(blank=True, null=True, verbose_name='ID Sessione')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Indirizzo IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tenant', verbose_name='Tenant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utente')),
            ],
            options={
                'verbose_name': 'Query Analytics',
                'verbose_name_plural': 'Query Analytics',
                'db_table': 'rag_engine_queryanalytics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['tenant', 'timestamp'], name='rag_engine__tenant__9dc1b2_idx'), models.Index(fields=['user', 'timestamp'], name='rag_engine__user_id_3b9f74_idx'), models.Index(fields=['was_successful', 'timestamp'], name='rag_engine__was_suc_a9e61b_idx')],
            },
        ),
    ]
