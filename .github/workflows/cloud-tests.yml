name: Cloud Shared Test Suite

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      PYTHONIOENCODING: utf-8
      APP_ENV: production
      ALWAYS_BUILD_GRAPH: 1
      EMBEDDINGS_OFFLINE: 1
      # Le seguenti devono essere impostate nei secrets del repo
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEO4J_URI: ${{ secrets.NEO4J_URI }}
      NEO4J_USER: ${{ secrets.NEO4J_USER }}
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      EMBEDDING_API_KEY: ${{ secrets.EMBEDDING_API_KEY }}
      API_BASE_URL: ${{ secrets.API_BASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies (system)
        run: uv pip install --system -e .[dev]

      - name: Prepare env file
        run: |
          touch .env.production

      - name: Run health tests
        run: |
          python scripts/run_tests_with_env.py --env-file .env.production tests/system/test_api_health_endpoints.py -q || true
          python scripts/run_tests_with_env.py --env-file .env.production tests/system/test_remote_health_endpoints.py -q || true

      - name: Run Neon schema verification
        run: python -X utf8 scripts/run_tests_with_env.py --env-file .env.production tests/system/test_neon_schema_verification.py -q

      - name: Run comprehensive E2E (cloud)
        run: |
          python -X utf8 scripts/run_tests_with_env.py --env-file .env.production tests/comprehensive/test_ingestion_pipeline.py -q
          python -X utf8 scripts/run_tests_with_env.py --env-file .env.production tests/comprehensive/test_query_operations.py -q

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Frontend smoke test
        run: node frontend/scripts/smoke_test.mjs
        env:
          VITE_API_BASE_URL: ${{ env.API_BASE_URL }}

      - name: Coverage report
        run: |
          uv run pytest --cov=agent --cov=ingestion --cov=fisio_rag_saas --cov-report=term-missing -q || true
